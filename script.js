// üî• Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ!)
const firebaseConfig = {
  apiKey: "AIzaSyBB25BI8gQsUXihsLqiLN8gywYX4yxnFTg",
  authDomain: "notes-8741e.firebaseapp.com",
  projectId: "notes-8741e",
  storageBucket: "notes-8741e.firebasestorage.app",
  messagingSenderId: "424099145357",
  appId: "1:424099145357:web:d8b3bbd9540128afbd24c4"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();
const storage = firebase.storage();

// –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const noteForm = document.getElementById('noteForm');
const userNameInput = document.getElementById('userName');
const avatarUpload = document.getElementById('avatarUpload');
const previewAvatar = document.getElementById('previewAvatar');
const uploadText = document.getElementById('uploadText');
const userAvatarUrlInput = document.getElementById('userAvatarUrl');
const noteInput = document.getElementById('noteInput');
const notesContainer = document.getElementById('notesContainer');
const submitBtn = document.getElementById('submitBtn');

// –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–≤–∞—Ç–∞—Ä–∫–∏
avatarUpload.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            previewAvatar.src = e.target.result;
            previewAvatar.style.display = 'block';
            uploadText.textContent = '‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!';
        }
        reader.readAsDataURL(file);
    }
});

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
notesContainer.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–æ–∫... <span class="heart">üíï</span></div>';

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∫–∏
noteForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const userName = userNameInput.value.trim();
    const noteText = noteInput.value.trim();
    const avatarFile = avatarUpload.files[0];
    
    if (!userName || !noteText) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏ –Ω–∏–∫ –∏ —Ç–µ–∫—Å—Ç –∑–∞–ø–∏—Å–∫–∏!');
        return;
    }
    
    submitBtn.disabled = true;
    submitBtn.textContent = 'üì§ –ó–∞–≥—Ä—É–∑–∫–∞...';
    
    try {
        let avatarUrl = '';
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
        if (avatarFile) {
            uploadText.textContent = 'üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ...';
            
            // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            const fileName = `avatars/${Date.now()}_${avatarFile.name}`;
            const storageRef = storage.ref();
            const avatarRef = storageRef.child(fileName);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ
            await avatarRef.put(avatarFile);
            
            // –ü–æ–ª—É—á–∞–µ–º URL —Ñ–æ—Ç–æ
            avatarUrl = await avatarRef.getDownloadURL();
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å–∫—É –≤ Firestore
        await db.collection('notes').add({
            username: userName,
            avatarUrl: avatarUrl,
            content: noteText,
            createdAt: firebase.firestore.FieldValue.serverTimestamp()
        });
        
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        noteInput.value = '';
        userNameInput.value = '';
        avatarUpload.value = '';
        previewAvatar.style.display = 'none';
        uploadText.textContent = 'üì∑ –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è';
        noteInput.focus();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∫–∏:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
    } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = 'üíå –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É';
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–æ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
db.collection('notes')
    .orderBy('createdAt', 'desc')
    .onSnapshot(snapshot => {
        notesContainer.innerHTML = '';
        
        if (snapshot.empty) {
            notesContainer.innerHTML = '<div class="loading">–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–æ–∫. –ë—É–¥—å –ø–µ—Ä–≤–æ–π! üíñ</div>';
            return;
        }
        
        snapshot.forEach(doc => {
            const note = doc.data();
            const noteElement = document.createElement('div');
            noteElement.className = 'note';
            
            // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
            let dateText = '–¢–æ–ª—å–∫–æ —á—Ç–æ';
            if (note.createdAt) {
                const date = note.createdAt.toDate();
                dateText = date.toLocaleString('ru-RU', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            }
            
            // –ê–≤–∞—Ç–∞—Ä–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å URL) –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∏–∫–æ–Ω–∫–∞
            const avatarHtml = note.avatarUrl ? 
                `<img class="note-avatar" src="${note.avatarUrl}" alt="Avatar" onerror="this.style.display='none';this.parentElement.innerHTML='üë§'">` :
                'üë§';
            
            noteElement.innerHTML = `
                <div class="note-header">
                    <div>${avatarHtml}</div>
                    <div class="note-username">${note.username}</div>
                </div>
                <div class="note-content">${note.content}</div>
                <div class="note-date">üìÖ ${dateText}</div>
            `;
            notesContainer.appendChild(noteElement);
        });
    }, (error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–ø–∏—Å–æ–∫:', error);
        notesContainer.innerHTML = '<div class="loading">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.</div>';
    });