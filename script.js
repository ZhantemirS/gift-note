// üî• Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ!)
const firebaseConfig = {
  apiKey: "AIzaSyBB25BI8gQsUXihsLqiLN8gywYX4yxnFTg",
  authDomain: "notes-8741e.firebaseapp.com",
  projectId: "notes-8741e",
  storageBucket: "notes-8741e.firebasestorage.app",
  messagingSenderId: "424099145357",
  appId: "1:424099145357:web:d8b3bbd9540128afbd24c4"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

// –≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const noteForm = document.getElementById('noteForm');
const userNameInput = document.getElementById('userName');
const noteInput = document.getElementById('noteInput');
const notesContainer = document.getElementById('notesContainer');

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –Ω–∏–∫–∞
function loadUserSession() {
    const savedUsername = localStorage.getItem('username');
    if (savedUsername) {
        userNameInput.value = savedUsername;
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞
function saveUserSession(username) {
    localStorage.setItem('username', username);
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
notesContainer.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —à—Ç—É—á–µ–∫... <span class="heart">üíï</span></div>';

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–∏–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    loadUserSession();
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Å–∫–∏
noteForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const userName = userNameInput.value.trim();
    const noteText = noteInput.value.trim();
    
    if (!userName || !noteText) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }
    
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∏–∫
        saveUserSession(userName);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å–∫—É –≤ Firestore
        await db.collection('notes').add({
            username: userName,
            content: noteText,
            createdAt: firebase.firestore.FieldValue.serverTimestamp()
        });
        
        // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∑–∞–ø–∏—Å–∫–∏
        noteInput.value = '';
        noteInput.focus();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∫–∏:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π  –µ—â–µ —Ä–∞–∑!');
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–æ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
db.collection('notes')
    .orderBy('createdAt', 'desc')
    .onSnapshot(snapshot => {
        notesContainer.innerHTML = '';
        
        if (snapshot.empty) {
            notesContainer.innerHTML = '<div class="loading">–ó–∞–ø–∏—Å–æ–∫ –Ω–µ—Ç—É –ø–æ–∫–∞–∞</div>';
            return;
        }
        
        snapshot.forEach(doc => {
            const note = doc.data();
            const noteElement = document.createElement('div');
            noteElement.className = 'note';
            
            // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
            let dateText = '–¢–æ–ª—å–∫–æ —á—Ç–æ';
            if (note.createdAt) {
                const date = note.createdAt.toDate();
                dateText = date.toLocaleString('ru-RU', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            }
            
            noteElement.innerHTML = `
                <div class="note-header">
                    <div class="note-username">${note.username}</div>
                </div>
                <div class="note-content">${note.content}</div>
                <div class="note-date">üìÖ ${dateText}</div>
            `;
            notesContainer.appendChild(noteElement);
        });
    }, (error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–ø–∏—Å–æ–∫:', error);
        notesContainer.innerHTML = '<div class="loading">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.</div>';
    });




    // –î–æ–±–∞–≤—å –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞, –ø–æ—Å–ª–µ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—É–∑—ã–∫–æ–π
document.addEventListener('DOMContentLoaded', function() {
    const audio = document.getElementById('background-music');
    const playButton = document.getElementById('play-button');
    const muteButton = document.getElementById('mute-button');
    const unmuteButton = document.getElementById('unmute-button');
    
    // Play button
    playButton.addEventListener('click', function() {
        audio.play().then(() => {
            playButton.style.display = 'none';
            muteButton.style.display = 'block';
            unmuteButton.style.display = 'none';
        }).catch(e => {
            console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', e);
        });
    });
    
    // Mute button (–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫)
    muteButton.addEventListener('click', function() {
        audio.muted = false;
        muteButton.style.display = 'none';
        unmuteButton.style.display = 'block';
    });
    
    // Unmute button (–≤—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫)
    unmuteButton.addEventListener('click', function() {
        audio.muted = true;
        unmuteButton.style.display = 'none';
        muteButton.style.display = 'block';
    });
    
    // –ê–≤—Ç–æ–ø–æ–ø—ã—Ç–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    setTimeout(() => {
        audio.play().catch(e => {
            console.log('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ');
        });
    }, 1000);
});